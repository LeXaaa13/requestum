{"ast":null,"code":"import axios from 'axios';\nexport const restAxios = axios.create({\n  baseURL: process.env.API_HOST\n});\nexport class RestService {\n  static async get({\n    url,\n    config,\n    params\n  }) {\n    const headers = config && config.headers ? config.headers : {};\n    const res = await restAxios.get(`${process.env.API_HOST}/${url}`, { ...config,\n      params,\n      ...headers\n    });\n    return res.data;\n  }\n\n  static async delete({\n    url,\n    config,\n    params\n  }) {\n    const headers = config && config.headers ? config.headers : {};\n    const res = await restAxios.delete(`${process.env.API_HOST}/${url}`, { ...config,\n      params,\n      ...headers\n    });\n    return res.data;\n  }\n\n  static async post({\n    url,\n    config,\n    data,\n    params\n  }) {\n    const headers = config && config.headers ? config.headers : {};\n    const res = await restAxios.post(`${process.env.API_HOST}/${url}`, data, { ...config,\n      params,\n      ...headers\n    });\n    return res.data;\n  }\n\n  static async put({\n    url,\n    config,\n    data,\n    params\n  }) {\n    const headers = config && config.headers ? config.headers : {};\n    const res = await restAxios.put(`${process.env.API_HOST}/${url}`, data, { ...config,\n      params,\n      ...headers\n    });\n    return res.data;\n  }\n\n  static async patch({\n    url,\n    config,\n    data,\n    params\n  }) {\n    const headers = config && config.headers ? config.headers : {};\n    const res = await restAxios.patch(`${process.env.API_HOST}/${url}`, data, { ...config,\n      params,\n      ...headers\n    });\n    return res.data;\n  }\n\n}","map":{"version":3,"sources":["/Users/a1/Desktop/requestum-test-app/src/helpers/rest-service.ts"],"names":["axios","restAxios","create","baseURL","process","env","API_HOST","RestService","get","url","config","params","headers","res","data","delete","post","put","patch"],"mappings":"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","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\n\nexport const restAxios = axios.create({\n    baseURL: process.env.API_HOST,\n});\n\nexport interface RequestParametersI {\n    url: string;\n    config?: AxiosRequestConfig;\n    data?: any;\n    params?: {};\n}\n\nexport class RestService {\n    public static async get<T = any>({ url, config, params }: RequestParametersI): Promise<T> {\n        const headers = config && config.headers ? config.headers : {};\n        const res = await restAxios.get<T>(`${process.env.API_HOST}/${url}`, {\n            ...config,\n            params,\n            ...headers,\n        });\n        return res.data;\n    }\n\n    public static async delete({ url, config, params }: RequestParametersI): Promise<void> {\n        const headers = config && config.headers ? config.headers : {};\n        const res = await restAxios.delete(`${process.env.API_HOST}/${url}`, {\n            ...config,\n            params,\n            ...headers,\n        });\n        return res.data;\n    }\n\n    public static async post<T = any>({ url, config, data, params }: RequestParametersI): Promise<T> {\n        const headers = config && config.headers ? config.headers : {};\n        const res = await restAxios.post(`${process.env.API_HOST}/${url}`, data, {\n            ...config,\n            params,\n            ...headers,\n        });\n        return res.data;\n    }\n\n    public static async put<T = any>({ url, config, data, params }: RequestParametersI): Promise<T> {\n        const headers = config && config.headers ? config.headers : {};\n        const res = await restAxios.put(`${process.env.API_HOST}/${url}`, data, {\n            ...config,\n            params,\n            ...headers,\n        });\n        return res.data;\n    }\n\n    public static async patch<T = any>({ url, config, data, params }: RequestParametersI): Promise<T> {\n        const headers = config && config.headers ? config.headers : {};\n        const res = await restAxios.patch(`${process.env.API_HOST}/${url}`, data, {\n            ...config,\n            params,\n            ...headers,\n        });\n        return res.data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}