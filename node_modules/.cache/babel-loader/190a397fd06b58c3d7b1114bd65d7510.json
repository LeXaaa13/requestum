{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/a1/Desktop/requestum-test-app/src/app.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './app.scss';\nimport { Header } from \"components/header/header\";\nimport { Sidebar } from 'components/sidebar/sidebar';\nimport { ContentBlock } from 'components/content-block/content-block';\nimport { getGithubReposThunk, getSearchReposHistoryThunk } from \"store/github-repos/github-repos.thunk\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { store } from 'store/store';\nimport { useRootSelector } from \"store/index.reducer\";\nimport { searchReposActions } from \"store/github-repos/github-repos.actions\";\nimport { useDebounce } from 'helpers/custom-hooks/use-debounce';\n\nconst ConnectedApp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n  const debouncedSearch = useDebounce(search, 500);\n  const {\n    githubReposState\n  } = useRootSelector(); // @ts-ignore\n\n  useEffect(() => dispatch(getGithubReposThunk()), [dispatch]); // @ts-ignore\n\n  useEffect(() => dispatch(getSearchReposHistoryThunk()), [dispatch]);\n  useEffect(() => {\n    const h = localStorage.getItem('history');\n    const hArr = h ? [...JSON.parse(h), search] : [search];\n    localStorage.setItem('history', JSON.stringify(hArr));\n  }, [search]);\n  useEffect(() => {\n    if (githubReposState.originalData !== null && !githubReposState.isLoading) {\n      dispatch(searchReposActions.success(debouncedSearch));\n    }\n  }, [search, githubReposState.originalData, githubReposState.isLoading, debouncedSearch, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        search: search,\n        setSearch: value => setSearch(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContentBlock, {\n        data: githubReposState.filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConnectedApp, \"2blAZqrrwBJ86XuUt7pALLazw7c=\", false, function () {\n  return [useDispatch, useDebounce, useRootSelector];\n});\n\n_c = ConnectedApp;\nexport const App = () => /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ConnectedApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 5\n}, this);\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectedApp\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/a1/Desktop/requestum-test-app/src/app.tsx"],"names":["React","useEffect","useState","Header","Sidebar","ContentBlock","getGithubReposThunk","getSearchReposHistoryThunk","Provider","useDispatch","store","useRootSelector","searchReposActions","useDebounce","ConnectedApp","dispatch","search","setSearch","debouncedSearch","githubReposState","h","localStorage","getItem","hArr","JSON","parse","setItem","stringify","originalData","isLoading","success","value","filteredData","App"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,SAAQC,MAAR,QAAqB,0BAArB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,SAAQC,YAAR,QAA2B,wCAA3B;AACA,SAAQC,mBAAR,EAA6BC,0BAA7B,QAA8D,uCAA9D;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,aAApC;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AACA,SAAQC,kBAAR,QAAiC,yCAAjC;AACA,SAASC,WAAT,QAA4B,mCAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAS,EAAT,CAApC;AACA,QAAMgB,eAAe,GAAGL,WAAW,CAACG,MAAD,EAAS,GAAT,CAAnC;AACA,QAAM;AAACG,IAAAA;AAAD,MAAqBR,eAAe,EAA1C,CAJuB,CAMvB;;AACAV,EAAAA,SAAS,CAAC,MAAMc,QAAQ,CAACT,mBAAmB,EAApB,CAAf,EAAwC,CAACS,QAAD,CAAxC,CAAT,CAPuB,CASvB;;AACAd,EAAAA,SAAS,CAAC,MAAMc,QAAQ,CAACR,0BAA0B,EAA3B,CAAf,EAAgD,CAACQ,QAAD,CAAhD,CAAT;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,CAAC,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAV;AACA,UAAMC,IAAI,GAAGH,CAAC,GAAG,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAJ,EAAmBJ,MAAnB,CAAH,GAAgC,CAACA,MAAD,CAA9C;AACAK,IAAAA,YAAY,CAACK,OAAb,CAAqB,SAArB,EAAgCF,IAAI,CAACG,SAAL,CAAeJ,IAAf,CAAhC;AACH,GAJQ,EAIN,CAACP,MAAD,CAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,gBAAgB,CAACS,YAAjB,KAAkC,IAAlC,IAA0C,CAACT,gBAAgB,CAACU,SAAhE,EAA2E;AACvEd,MAAAA,QAAQ,CAACH,kBAAkB,CAACkB,OAAnB,CAA2BZ,eAA3B,CAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACF,MAAD,EAASG,gBAAgB,CAACS,YAA1B,EAAwCT,gBAAgB,CAACU,SAAzD,EAAoEX,eAApE,EAAqFH,QAArF,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEC,MAAjB;AAAyB,QAAA,SAAS,EAAGe,KAAD,IAAmBd,SAAS,CAACc,KAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEZ,gBAAgB,CAACa;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjCD;;GAAMlB,Y;UACeL,W,EAEOI,W,EACGF,e;;;KAJzBG,Y;AAmCN,OAAO,MAAMmB,GAAa,GAAG,mBACzB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEvB,KAAjB;AAAA,yBACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADG;MAAMuB,G","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './app.scss'\nimport {Header} from \"components/header/header\";\nimport {Sidebar} from 'components/sidebar/sidebar';\nimport {ContentBlock} from 'components/content-block/content-block';\nimport {getGithubReposThunk, getSearchReposHistoryThunk} from \"store/github-repos/github-repos.thunk\";\nimport {Provider, useDispatch} from \"react-redux\";\nimport {store} from 'store/store';\nimport {useRootSelector} from \"store/index.reducer\";\nimport {searchReposActions} from \"store/github-repos/github-repos.actions\";\nimport { useDebounce } from 'helpers/custom-hooks/use-debounce';\n\nconst ConnectedApp = () => {\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState<string>('');\n    const debouncedSearch = useDebounce(search, 500);\n    const {githubReposState} = useRootSelector();\n\n    // @ts-ignore\n    useEffect(() => dispatch(getGithubReposThunk()), [dispatch]);\n\n    // @ts-ignore\n    useEffect(() => dispatch(getSearchReposHistoryThunk()) , [dispatch])\n\n    useEffect(() => {\n        const h = localStorage.getItem('history');\n        const hArr = h ? [...JSON.parse(h), search] : [search];\n        localStorage.setItem('history', JSON.stringify(hArr))\n    }, [search])\n\n    useEffect(() => {\n        if (githubReposState.originalData !== null && !githubReposState.isLoading) {\n            dispatch(searchReposActions.success(debouncedSearch))\n        }\n    }, [search, githubReposState.originalData, githubReposState.isLoading, debouncedSearch, dispatch])\n\n    return (\n        <div className='wrapper'>\n            <Header/>\n            <div className='main-wrapper'>\n                <Sidebar search={search} setSearch={(value: string) => setSearch(value)}/>\n                <ContentBlock data={githubReposState.filteredData}/>\n            </div>\n        </div>\n    )\n}\n\nexport const App: React.FC = () => (\n    <Provider store={store}>\n        <ConnectedApp/>\n    </Provider>\n)\n"]},"metadata":{},"sourceType":"module"}