{"ast":null,"code":"import { createReducer } from 'typesafe-actions';\nimport { getReposActions } from './github-repos.actions';\nconst initialState = {\n  isLoading: false,\n  data: null,\n  error: null\n};\nexport const githubReposReducer = createReducer(initialState).handleAction(getReposActions.request, state => ({ ...state,\n  isLoading: true\n})).handleAction(getReposActions.success, (state, action) => ({ ...state,\n  isLoading: false,\n  data: action.payload.map(item => {\n    return {\n      title: item.name,\n      lang: item.language,\n      desc: item.description\n    };\n  })\n})).handleAction(getReposActions.failure, (state, action) => ({ ...state,\n  isLoading: false,\n  error: action.payload,\n  data: null\n}));","map":{"version":3,"sources":["/Users/a1/Desktop/requestum-test-app/src/store/github-repos/githubb-repos.reducer.ts"],"names":["createReducer","getReposActions","initialState","isLoading","data","error","githubReposReducer","handleAction","request","state","success","action","payload","map","item","title","name","lang","language","desc","description","failure"],"mappings":"AAAA,SAAqBA,aAArB,QAA0C,kBAA1C;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAQA,MAAMC,YAA+B,GAAG;AACpCC,EAAAA,SAAS,EAAE,KADyB;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpCC,EAAAA,KAAK,EAAE;AAH6B,CAAxC;AAQA,OAAO,MAAMC,kBAAkB,GAAGN,aAAa,CAAwCE,YAAxC,CAAb,CAC7BK,YAD6B,CAE1BN,eAAe,CAACO,OAFU,EAGzBC,KAAD,KAA+B,EAC3B,GAAGA,KADwB;AAE3BN,EAAAA,SAAS,EAAE;AAFgB,CAA/B,CAH0B,EAQ7BI,YAR6B,CAS1BN,eAAe,CAACS,OATU,EAU1B,CAACD,KAAD,EAAQE,MAAR,MAAuC,EACnC,GAAGF,KADgC;AAEnCN,EAAAA,SAAS,EAAE,KAFwB;AAGnCC,EAAAA,IAAI,EAAEO,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAoBC,IAAD,IAAe;AACpC,WAAO;AACHC,MAAAA,KAAK,EAAED,IAAI,CAACE,IADT;AAEHC,MAAAA,IAAI,EAAEH,IAAI,CAACI,QAFR;AAGHC,MAAAA,IAAI,EAAEL,IAAI,CAACM;AAHR,KAAP;AAKH,GANK;AAH6B,CAAvC,CAV0B,EAsB7Bb,YAtB6B,CAuB1BN,eAAe,CAACoB,OAvBU,EAwB1B,CAACZ,KAAD,EAAQE,MAAR,MAAuC,EACnC,GAAGF,KADgC;AAEnCN,EAAAA,SAAS,EAAE,KAFwB;AAGnCE,EAAAA,KAAK,EAAEM,MAAM,CAACC,OAHqB;AAInCR,EAAAA,IAAI,EAAE;AAJ6B,CAAvC,CAxB0B,CAA3B","sourcesContent":["import { ActionType, createReducer } from 'typesafe-actions';\nimport { getReposActions } from './github-repos.actions';\n\nexport interface IGithubReposState {\n    isLoading: boolean;\n    data: any;\n    error: string | null;\n}\n\nconst initialState: IGithubReposState = {\n    isLoading: false,\n    data: null,\n    error: null,\n};\n\ntype GithubReposActions = ActionType<typeof getReposActions>;\n\nexport const githubReposReducer = createReducer<IGithubReposState, GithubReposActions>(initialState)\n    .handleAction(\n        getReposActions.request,\n        (state): IGithubReposState => ({\n            ...state,\n            isLoading: true\n        })\n    )\n    .handleAction(\n        getReposActions.success,\n        (state, action): IGithubReposState => ({\n            ...state,\n            isLoading: false,\n            data: action.payload.map((item: any) => {\n                return {\n                    title: item.name,\n                    lang: item.language,\n                    desc: item.description\n                }\n            })\n        })\n    )\n    .handleAction(\n        getReposActions.failure,\n        (state, action): IGithubReposState => ({\n            ...state,\n            isLoading: false,\n            error: action.payload,\n            data: null,\n        })\n    )\n"]},"metadata":{},"sourceType":"module"}