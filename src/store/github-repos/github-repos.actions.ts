import { createAsyncAction } from 'typesafe-actions';
import {IGithubReposRes} from "../../models/github-repos/github-repos";

enum GITHUB_REPOS_ACTIONS_TYPE {
    GET_REPOS_REQUEST = 'GET_REPOS_REQUEST',
    GET_REPOS_SUCCESS = 'GET_REPOS_SUCCESS',
    GET_REPOS_FAILURE = 'GET_REPOS_FAILURE',
    SEARCH_REPOS_REQUEST = 'SEARCH_REPOS_REQUEST',
    SEARCH_REPOS_SUCCESS = 'SEARCH_REPOS_SUCCESS',
    SEARCH_REPOS_FAILURE = 'SEARCH_REPOS_FAILURE',
    GET_SEARCH_REPOS_HISTORY_REQUEST = 'GET_SEARCH_REPOS_HISTORY_REQUEST',
    GET_SEARCH_REPOS_HISTORY_SUCCESS = 'GET_SEARCH_REPOS_HISTORY_SUCCESS',
    GET_SEARCH_REPOS_HISTORY_FAILURE = 'GET_SEARCH_REPOS_HISTORY_FAILURE',
}

export const getReposActions = createAsyncAction(
    GITHUB_REPOS_ACTIONS_TYPE.GET_REPOS_REQUEST,
    GITHUB_REPOS_ACTIONS_TYPE.GET_REPOS_SUCCESS,
    GITHUB_REPOS_ACTIONS_TYPE.GET_REPOS_FAILURE
)<void, IGithubReposRes[], string>();

export const searchReposActions = createAsyncAction(
    GITHUB_REPOS_ACTIONS_TYPE.SEARCH_REPOS_REQUEST,
    GITHUB_REPOS_ACTIONS_TYPE.SEARCH_REPOS_SUCCESS,
    GITHUB_REPOS_ACTIONS_TYPE.SEARCH_REPOS_FAILURE
)<void, string, string>();

export const getSearchReposHistoryActions = createAsyncAction(
    GITHUB_REPOS_ACTIONS_TYPE.GET_SEARCH_REPOS_HISTORY_REQUEST,
    GITHUB_REPOS_ACTIONS_TYPE.GET_SEARCH_REPOS_HISTORY_SUCCESS,
    GITHUB_REPOS_ACTIONS_TYPE.GET_SEARCH_REPOS_HISTORY_FAILURE
)<void, string[], string>();